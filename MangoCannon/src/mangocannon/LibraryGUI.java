/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LibraryGUI.java
 *
 * Created on 28-Sep-2009, 11:55:39
 */
package library;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.JOptionPane;

/**
 *
 * @author Kutoma
 */
public class LibraryGUI extends javax.swing.JFrame {

    private SetOfMembers theMembers = new SetOfMembers();
    private SetOfBooks holdings = new SetOfBooks();

    /**
     * Creates new form LibraryGUI
     */
    public LibraryGUI() {

        initComponents();
        
        
        this.holdings = (SetOfBooks) deserializeObject("holdings.ser");
        this.theMembers = (SetOfMembers) deserializeObject("theMembers.ser");
        
//        System.out.println(holdings.size());
        
        if (holdings == null) {
            this.holdings = new SetOfBooks();
        }
        
        if (theMembers == null) {
            this.theMembers = new SetOfMembers();
        }
//        Member member1 = new Member("Jane");
//        Member member2 = new Member("Amir");
//        Member member3 = new Member("Astrid");
//        Member member4 = new Member("Andy");
//
//        theMembers.addMember(member1);
//        theMembers.addMember(member2);
//        theMembers.addMember(member3);
//        theMembers.addMember(member4);
//
//        Book book1 = new Book("The Alchemist", "Paulo Choelho", "1");
//        Book book2 = new Book("The Map", "Dave Burdett", "2");
//        Book book3 = new Book("The Utopia", "Thomas More", "3");
//        Book book4 = new Book("Steve Jobs", "Walter Isaacson", "4");
//
//        holdings.addBook(book1);
//        holdings.addBook(book2);
//        holdings.addBook(book3);
//        holdings.addBook(book4);

        //Updates the GUI jLists with initial data
        MemberList.setListData(theMembers);
        BookList.setListData(holdings);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        loanBook = new javax.swing.JButton();
        returnBook = new javax.swing.JButton();
        addBook = new javax.swing.JButton();
        jTextFieldMemberName = new javax.swing.JTextField();
        searchMember = new javax.swing.JButton();
        addMember = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        BookList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        MemberList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldBookName = new javax.swing.JTextField();
        jTextFieldBookAuthor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        removeBook = new javax.swing.JButton();
        removeMember = new javax.swing.JButton();
        notOnLoan = new javax.swing.JButton();
        booksOnLoan = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        BooksOnLoan = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        resetSearch = new javax.swing.JButton();
        searchBook = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        ISBNNum = new javax.swing.JTextField();
        booksOnLoan1 = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        searchBook1 = new javax.swing.JButton();
        searchBook2 = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loanBook.setText("Loan Book");
        loanBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loanBookActionPerformed(evt);
            }
        });

        returnBook.setText("Return Book");
        returnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(returnBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loanBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 69, Short.MAX_VALUE)
                .addComponent(loanBook)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(returnBook))
        );

        addBook.setText("Add Book");
        addBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookActionPerformed(evt);
            }
        });

        jTextFieldMemberName.setToolTipText("");

        searchMember.setText("Search");
        searchMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMemberActionPerformed(evt);
            }
        });

        addMember.setText("Add Member");
        addMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMemberActionPerformed(evt);
            }
        });

        BookList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(BookList);

        MemberList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        MemberList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                MemberListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(MemberList);

        jLabel1.setText("Member Name:");

        jLabel2.setText("Members");

        jLabel3.setText("Books");

        jLabel4.setText("Book Name:");

        jTextFieldBookName.setToolTipText("");

        jTextFieldBookAuthor.setToolTipText("");

        jLabel5.setText("Book Author:");

        removeBook.setText("Remove Book");
        removeBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBookActionPerformed(evt);
            }
        });

        removeMember.setText("Remove Member");
        removeMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMemberActionPerformed(evt);
            }
        });

        notOnLoan.setText("Books Not On Loan");
        notOnLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notOnLoanActionPerformed(evt);
            }
        });

        booksOnLoan.setText("Books On Loan");
        booksOnLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booksOnLoanActionPerformed(evt);
            }
        });

        BooksOnLoan.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(BooksOnLoan);

        jLabel6.setText("Members Current Loans:");

        resetSearch.setText("Reset Search");
        resetSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetSearchActionPerformed(evt);
            }
        });

        searchBook.setText("Search Title");
        searchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBookActionPerformed(evt);
            }
        });

        jLabel7.setText("Book ISBN:");

        ISBNNum.setToolTipText("");

        booksOnLoan1.setText("All Books");
        booksOnLoan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booksOnLoan1ActionPerformed(evt);
            }
        });

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        searchBook1.setText("Search Author");
        searchBook1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBook1ActionPerformed(evt);
            }
        });

        searchBook2.setText("Search ISBN");
        searchBook2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBook2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldMemberName, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextFieldBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(searchBook1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addBook, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(removeBook))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ISBNNum, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(searchBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(searchBook2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addMember, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeMember)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchMember, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(resetSearch)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(notOnLoan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(booksOnLoan, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(booksOnLoan1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addComponent(ExitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldMemberName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(searchMember)
                            .addComponent(resetSearch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addMember)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeMember))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(searchBook))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jTextFieldBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchBook1))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(ISBNNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchBook2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addBook)
                                    .addComponent(removeBook)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(67, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(notOnLoan)
                                    .addComponent(booksOnLoan)
                                    .addComponent(booksOnLoan1))
                                .addContainerGap(25, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ExitButton))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookActionPerformed
        Book book1 = new Book(jTextFieldBookName.getText(), jTextFieldBookAuthor.getText(), ISBNNum.getText());

        holdings.addBook(book1);

        BookList.setListData(holdings);
    }//GEN-LAST:event_addBookActionPerformed

    private void addMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMemberActionPerformed

        Member member1 = new Member(jTextFieldMemberName.getText());

        theMembers.addMember(member1);

        MemberList.setListData(theMembers);

        //System.out.println("Member added: " + jTextField1.getText());
        //System.out.println(theMembers.toString());

    }//GEN-LAST:event_addMemberActionPerformed

    private void searchMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMemberActionPerformed
        // TODO add your handling code here:
        //Member tempMember = new Member ()

        if ((theMembers.getMemberFromName(jTextFieldMemberName.getText())) == null) {
            JOptionPane.showMessageDialog(null, "Member does not exist.");
        } else {

            SetOfMembers temp = new SetOfMembers();
            temp.addMember(theMembers.getMemberFromName(jTextFieldMemberName.getText()));
            MemberList.setListData(temp);

        }


    }//GEN-LAST:event_searchMemberActionPerformed

    private void removeBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBookActionPerformed
        // TODO add your handling code here:
        boolean found = false;
        Book tempBook = new Book("temp", "temp", null);

        for (int i = 0; i < holdings.size(); i++) {
            if ((holdings.get(i).getTitle().equals(jTextFieldBookName.getText())
                    && holdings.get(i).getAuthor().equals(jTextFieldBookAuthor.getText()))) {

                found = true;
                tempBook = holdings.get(i);
                holdings.removeBook(holdings.get(i));
            }
        }
        if (found == true) {
            System.out.println("Book successfully removed: " + tempBook.getTitle() + " - " + tempBook.getAuthor());
            BookList.setListData(holdings);
        } else {
            System.out.println("Book not found");
        }

    }//GEN-LAST:event_removeBookActionPerformed

    private void removeMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMemberActionPerformed
        // TODO add your handling code here:
        boolean found = false;
        Member tempMember = null;//new Member("temp");

        for (int i = 0; i < theMembers.size(); i++) {
            if (theMembers.get(i).getName().equals((jTextFieldMemberName.getText()))) {

                found = true;
                tempMember = theMembers.get(i);
                theMembers.removeMember(theMembers.get(i));
            }

        }
        if (found == true) {
            System.out.println("Member sucessfully removed: " + tempMember.getName());
            MemberList.setListData(theMembers);
        } else {
            System.out.println("Member not found");
        }

    }//GEN-LAST:event_removeMemberActionPerformed

    private void returnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookActionPerformed
        // TODO add your handling code here:

        Book tempBook = (Book) BookList.getSelectedValue();
        //Casts the plain object type into type Book
        Member tempMember = (Member) MemberList.getSelectedValue();

        tempMember.returnBook(tempBook);
        BooksOnLoan.setListData(tempMember.getCurrentLoans());

    }//GEN-LAST:event_returnBookActionPerformed

    private void loanBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loanBookActionPerformed

        Book tempBook = (Book) BookList.getSelectedValue();
        //Casts the plain object type into type Book
        Member tempMember = (Member) MemberList.getSelectedValue();
        //int memberLoanCount = 0;

//        //Gets amount of books on loan for that member
//        for (int i = 0; i < holdings.size(); i++){
//            if (holdings.get(i).getBorrower() == tempMember){
//                memberLoanCount++;
//            }
//        }
        //if (memberLoanCount < 3){
        if (tempBook.getBorrower() == null) {
            if (tempMember.getCurrentLoans().size() < 3) {
                tempMember.borrowBook(tempBook);
            } else {
                JOptionPane.showMessageDialog(null, "Cannot loan more than 3 books.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Book is already on loan.");
        }

        BooksOnLoan.setListData(tempMember.getCurrentLoans());

    }//GEN-LAST:event_loanBookActionPerformed

    private void notOnLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notOnLoanActionPerformed
        // TODO add your handling code here:

        SetOfBooks tempBooks = new SetOfBooks();

        for (int i = 0; i < holdings.size(); i++) {
            if (holdings.get(i).getBorrower() == null) {
                tempBooks.addBook(holdings.get(i));
            }
        }

        BookList.setListData(tempBooks);

    }//GEN-LAST:event_notOnLoanActionPerformed

    private void booksOnLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booksOnLoanActionPerformed
        // TODO add your handling code here:

        SetOfBooks tempBooks = new SetOfBooks();

        for (int i = 0; i < holdings.size(); i++) {
            if (holdings.get(i).getBorrower() != null) {
                tempBooks.addBook(holdings.get(i));
            }
        }

        BookList.setListData(tempBooks);
    }//GEN-LAST:event_booksOnLoanActionPerformed

    private void MemberListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_MemberListValueChanged
        // TODO add your handling code here:
        Member tempMember = (Member) MemberList.getSelectedValue();
        if (tempMember != null) {
            BooksOnLoan.setListData(tempMember.getCurrentLoans());
        }
    }//GEN-LAST:event_MemberListValueChanged

    private void resetSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetSearchActionPerformed
        // TODO add your handling code here:

        MemberList.setListData(theMembers);

    }//GEN-LAST:event_resetSearchActionPerformed

    private void searchBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBookActionPerformed
        // TODO add your handling code here:
        
//        if ((theMembers.getMemberFromName(jTextFieldMemberName.getText())) == null) {
//            JOptionPane.showMessageDialog(null, "Member does not exist.");
//        } else {
//
//            SetOfMembers temp = new SetOfMembers();
//            temp.addMember(theMembers.getMemberFromName(jTextFieldMemberName.getText()));
//            MemberList.setListData(temp);
//
//        }
        if (holdings.findBookFromTitle(jTextFieldBookName.getText()) != null){
            SetOfBooks temp = new SetOfBooks();
            temp = (holdings.findBookFromTitle(jTextFieldBookName.getText()));
            BookList.setListData(temp);
        }
        
        else {
            JOptionPane.showMessageDialog(null, "Book does not exist.");
        }
        
        
        
        
    }//GEN-LAST:event_searchBookActionPerformed

    private void booksOnLoan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booksOnLoan1ActionPerformed
        // TODO add your handling code here:
        BookList.setListData(holdings);
    }//GEN-LAST:event_booksOnLoan1ActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        serializeObject("holdings.ser", holdings);
        serializeObject("theMembers.ser", theMembers);
        
        System.exit(0);
        
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void searchBook1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBook1ActionPerformed
        // TODO add your handling code here:
        if (holdings.findBookByAuthor(jTextFieldBookAuthor.getText()) != null){
            SetOfBooks temp = new SetOfBooks();
            temp = (holdings.findBookByAuthor(jTextFieldBookAuthor.getText()));
            BookList.setListData(temp);
        }
        
        else {
            JOptionPane.showMessageDialog(null, "Book does not exist.");
        }
    }//GEN-LAST:event_searchBook1ActionPerformed

    private void searchBook2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBook2ActionPerformed
        // TODO add your handling code here:
        if (holdings.findBookFromISBN(ISBNNum.getText()) != null){
            SetOfBooks temp = new SetOfBooks();
            temp = (holdings.findBookFromISBN(ISBNNum.getText()));
            BookList.setListData(temp);
        }
        
        else {
            JOptionPane.showMessageDialog(null, "Book does not exist.");
        }
    }//GEN-LAST:event_searchBook2ActionPerformed

    private void serializeObject(String filePath, Object object) {
        try {
            FileOutputStream fileOut
                    = new FileOutputStream(filePath);
            ObjectOutputStream out = new ObjectOutputStream(fileOut);
            out.writeObject(object);
            out.close();
            fileOut.close();
        } catch (IOException i) {
            i.printStackTrace();
        }
    }

    private Object deserializeObject(String filePath) {
        Object object = null;
        try {
            FileInputStream fileIn = new FileInputStream(filePath);
            ObjectInputStream in = new ObjectInputStream(fileIn);
            object = in.readObject();
            in.close();
            fileIn.close();
        } catch (IOException i) {
            //i.printStackTrace();
        } catch (ClassNotFoundException c) {
            //c.printStackTrace();
        }
        return object;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LibraryGUI().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList BookList;
    private javax.swing.JList BooksOnLoan;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTextField ISBNNum;
    private javax.swing.JList MemberList;
    private javax.swing.JButton addBook;
    private javax.swing.JButton addMember;
    private javax.swing.JButton booksOnLoan;
    private javax.swing.JButton booksOnLoan1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextFieldBookAuthor;
    private javax.swing.JTextField jTextFieldBookName;
    private javax.swing.JTextField jTextFieldMemberName;
    private javax.swing.JButton loanBook;
    private javax.swing.JButton notOnLoan;
    private javax.swing.JButton removeBook;
    private javax.swing.JButton removeMember;
    private javax.swing.JButton resetSearch;
    private javax.swing.JButton returnBook;
    private javax.swing.JButton searchBook;
    private javax.swing.JButton searchBook1;
    private javax.swing.JButton searchBook2;
    private javax.swing.JButton searchMember;
    // End of variables declaration//GEN-END:variables

}
